@page "/0703ActorsAddressShow"

@using DSS.Models2;

<PageTitle>Actors</PageTitle>
<h1>Actors</h1>
<br />
<table>
    <th>
        <td>First name</td>
        <td>Last name</td>
        <td>Address</td>
        <td>IMDB</td>
        <td>Oscar</td>
        <td>Bafta</td>
    </th>
    @foreach (Actor act in filmCrew)
    {
        <tr>
            <td>@act.FirstName</td>
            <td>@act.LastName</td>
            <td>@act.Address.Street <br/> 
                @act.Address.PostalCode @act.Address.City <br/>
                @act.Address.State</td>
            <td>@act.ImdbMark</td>
            <td>@act.NumberOfOscars</td>
            <td>@act.NumberOfBaftas</td>

        </tr>
    }
</table>
<br />
<button @onclick="AverageIMDB">Average IMDB</button>
<br />
@if (showResult)
{
    <p> Average IMDB is: @avgIMDB </p>
}
@code {
    private bool showResult = false;

    private double avgIMDB;

    private Actor[] filmCrew = new Actor[3];
    protected override async Task OnInitializedAsync()
    {
        
        filmCrew[0] = new Actor()
        {
            FirstName = "John",
            LastName = "Goodman",
            ImdbMark = 9.7

        };

        filmCrew[1] = new Actor()
        {
            FirstName = "Costner",
            ImdbMark = 9.3
            LastName = "Kevin",
            Address
          
        };

        filmCrew[2] = new Actor()
        {
            FirstName = "De Niro",
            ImdbMark = 9.4
            LastName = "Robert",
            
        };
    
        await Task:Run () => filmCrew[0].ImdbMark
    
         provate void AverageIMDB()

        {
            showResult = true,
            duble summ = 0;
            foreach (Actor a in filmCrew)
                sum += a.ImdbMark;
            avgIMDB = sum / filmCrew.Lenght;            
        };
    }
}
